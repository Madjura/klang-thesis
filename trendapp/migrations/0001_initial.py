# Generated by Django 3.0.2 on 2020-09-28 16:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_title', models.TextField(null=True)),
                ('channel_link', models.TextField(null=True)),
                ('channel_description', models.TextField(null=True)),
                ('channel_language', models.CharField(max_length=20, null=True)),
                ('channel_lastBuildDate', models.DateTimeField(null=True)),
                ('item_title', models.TextField(null=True)),
                ('item_link', models.TextField(null=True)),
                ('item_description', models.TextField(null=True)),
                ('item_pubDate', models.DateTimeField(null=True)),
                ('item_guid', models.TextField(null=True, unique=True)),
                ('topic', models.TextField(null=True)),
                ('item_webpage', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StoreUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(null=True, unique=True)),
                ('name', models.TextField(null=True)),
                ('screen_name', models.TextField(null=True)),
                ('location', models.TextField(null=True)),
                ('description', models.TextField(null=True)),
                ('url', models.TextField(null=True)),
                ('protected', models.BooleanField(null=True)),
                ('followers_count', models.IntegerField(null=True)),
                ('friends_count', models.IntegerField(null=True)),
                ('listed_count', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('favourites_count', models.IntegerField(null=True)),
                ('geo_enabled', models.BooleanField(null=True)),
                ('verified', models.BooleanField(null=True)),
                ('statuses_count', models.IntegerField(null=True)),
                ('lang', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tweet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_id', models.IntegerField(unique=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('text', models.TextField(null=True)),
                ('truncated', models.BooleanField(null=True)),
                ('source', models.TextField(null=True)),
                ('in_reply_to_status_id', models.IntegerField(null=True)),
                ('in_reply_to_user_id', models.IntegerField(null=True)),
                ('in_reply_to_screen_name', models.TextField(null=True)),
                ('retweet_count', models.IntegerField(null=True)),
                ('favorite_count', models.IntegerField(null=True)),
                ('lang', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(null=True, unique=True)),
                ('name', models.TextField(null=True)),
                ('screen_name', models.TextField(null=True)),
                ('location', models.TextField(null=True)),
                ('description', models.TextField(null=True)),
                ('url', models.TextField(null=True)),
                ('protected', models.BooleanField(null=True)),
                ('followers_count', models.IntegerField(null=True)),
                ('friends_count', models.IntegerField(null=True)),
                ('listed_count', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('favourites_count', models.IntegerField(null=True)),
                ('geo_enabled', models.BooleanField(null=True)),
                ('verified', models.BooleanField(null=True)),
                ('statuses_count', models.IntegerField(null=True)),
                ('lang', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TweetUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.TextField(null=True)),
                ('expanded_url', models.TextField(null=True)),
                ('display_url', models.TextField(null=True)),
                ('beginning', models.IntegerField(null=True)),
                ('end', models.IntegerField(null=True)),
                ('tweet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trendapp.Tweet')),
            ],
        ),
        migrations.AddField(
            model_name='tweet',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trendapp.User'),
        ),
        migrations.CreateModel(
            name='StoreTweet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_id', models.IntegerField(unique=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('text', models.TextField(null=True)),
                ('truncated', models.BooleanField(null=True)),
                ('source', models.TextField(null=True)),
                ('in_reply_to_status_id', models.IntegerField(null=True)),
                ('in_reply_to_user_id', models.IntegerField(null=True)),
                ('in_reply_to_screen_name', models.TextField(null=True)),
                ('retweet_count', models.IntegerField(null=True)),
                ('favorite_count', models.IntegerField(null=True)),
                ('lang', models.CharField(max_length=20, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trendapp.StoreUser')),
            ],
        ),
        migrations.CreateModel(
            name='Mention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beginning', models.IntegerField(null=True)),
                ('end', models.IntegerField(null=True)),
                ('screen_name', models.TextField(null=True)),
                ('name', models.TextField(null=True)),
                ('mention_id', models.IntegerField(null=True)),
                ('tweet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trendapp.Tweet')),
            ],
        ),
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beginning', models.IntegerField(null=True)),
                ('end', models.IntegerField(null=True)),
                ('tag', models.TextField(default='')),
                ('tweet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trendapp.Tweet')),
            ],
        ),
        migrations.CreateModel(
            name='FeedContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('content', models.TextField()),
                ('feed', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='trendapp.Feed')),
            ],
        ),
    ]
